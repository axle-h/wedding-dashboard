<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account_InvalidUserNameOrPassword" xml:space="preserve">
    <value>Invalid user name or password</value>
  </data>
  <data name="Account_SignIn" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="Account_SignOut" xml:space="preserve">
    <value>Sign Out</value>
  </data>
  <data name="BestMan" xml:space="preserve">
    <value>Best Man</value>
  </data>
  <data name="ContactPage_Link" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="ContactPage_SubTitle" xml:space="preserve">
    <value>Have questions? We have answers (maybe)</value>
  </data>
  <data name="ContactPage_Title" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="Dad" xml:space="preserve">
    <value>Dad</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="Guest" xml:space="preserve">
    <value>Guest</value>
  </data>
  <data name="HomePage_Link" xml:space="preserve">
    <value>Wedding</value>
  </data>
  <data name="HomePage_Title" xml:space="preserve">
    <value>Our Wedding</value>
  </data>
  <data name="InformationPage_GettingThere" xml:space="preserve">
    <value>Getting there</value>
  </data>
  <data name="InformationPage_Gifts_Title" xml:space="preserve">
    <value>Something to Buy</value>
  </data>
  <data name="InformationPage_Honeymoon_Poem_1" xml:space="preserve">
    <value>The date has been set and we’d love you to come,&lt;br /&gt;
To celebrate our wedding, a long way for some,&lt;br /&gt;
All you must do, is decide what to wear,&lt;br /&gt;
Then polish your jewellery and comb up your hair.</value>
  </data>
  <data name="InformationPage_Honeymoon_Poem_2" xml:space="preserve">
    <value>Don’t worry about gifts, don’t buy us a yacht,&lt;br /&gt;
The things that we need, we’ve already got.&lt;br /&gt;
Our home is quite compact, we may have to move&lt;br /&gt;
Then our storage and space will surely improve.</value>
  </data>
  <data name="InformationPage_Honeymoon_Poem_3" xml:space="preserve">
    <value>Don’t go out shopping or get yourself stressed,&lt;br /&gt;
Don’t alter your plans for a pre wedding rest.&lt;br /&gt;
If you want to be generous, despite what we’ve said,&lt;br /&gt;
Then save all the hassle and do this instead...</value>
  </data>
  <data name="InformationPage_Honeymoon_Poem_4" xml:space="preserve">
    <value>Don’t know how to word this but will give it our best shot…&lt;br /&gt;
Contributions are most welcome, we’ll go somewhere hot!&lt;br /&gt;
A honeymoon would be marvellous, to start off our life.&lt;br /&gt;
In our long winding journey, as new husband and wife!</value>
  </data>
  <data name="InformationPage_Hotels_1" xml:space="preserve">
    <value>The closest hotel is Dakota Nottingham, a ten minute drive from Goosedale.</value>
  </data>
  <data name="InformationPage_Hotels_2" xml:space="preserve">
    <value>The manager has kindly arranged a special discounted room rate for any of our guests that would like to stay at the hotel. A double room is £79. To guarantee a room, call quoting &lt;span class="subtle"&gt;'Kathryn &amp; Alex, Goosedale Wedding 14th March 2015'&lt;/span&gt;.</value>
  </data>
  <data name="InformationPage_Hotels_3" xml:space="preserve">
    <value>We will be staying there and we couldn't wish for a better ending to our wedding than to share our first breakfast as husband and wife (as in proper bacon and eggs breakfast) with our closest friends and family.</value>
  </data>
  <data name="InformationPage_Hotels_Title" xml:space="preserve">
    <value>Somewhere to Stay</value>
  </data>
  <data name="InformationPage_Link" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="InformationPage_SubTitle" xml:space="preserve">
    <value>The stuff we couldn't fit on the invitation</value>
  </data>
  <data name="InformationPage_Title" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="InformationPage_Venue_1" xml:space="preserve">
    <value>That's right, we changed the venue...</value>
  </data>
  <data name="InformationPage_Venue_2" xml:space="preserve">
    <value>We'll be getting married at a lovely little place called Goosedale. It's in Papplewick, which is about a 30 minute drive from Chesterfield. Just off of Junction 27 on the M1.</value>
  </data>
  <data name="LoginPage_Link" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginPage_SubTitle" xml:space="preserve">
    <value>Who are you?</value>
  </data>
  <data name="LoginPage_Title" xml:space="preserve">
    <value>Hello.</value>
  </data>
  <data name="Mum" xml:space="preserve">
    <value>Mum</value>
  </data>
  <data name="RandomStoryTitleLabels_0" xml:space="preserve">
    <value>Some jarb about</value>
  </data>
  <data name="RandomStoryTitleLabels_1" xml:space="preserve">
    <value>All the scoop on</value>
  </data>
  <data name="RandomStoryTitleLabels_2" xml:space="preserve">
    <value>Confessions about</value>
  </data>
  <data name="RandomStoryTitleLabels_3" xml:space="preserve">
    <value>More than we need to know about</value>
  </data>
  <data name="RandomStoryTitleLabels_4" xml:space="preserve">
    <value>Pure filth on</value>
  </data>
  <data name="RandomStoryTitleLabels_5" xml:space="preserve">
    <value>Secrets from the front line on</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RsvpPage_AddGuest" xml:space="preserve">
    <value>You missed someone off...</value>
  </data>
  <data name="RsvpPage_AddStory" xml:space="preserve">
    <value>Add story or interesting fact...</value>
  </data>
  <data name="RsvpPage_DietaryRequirements" xml:space="preserve">
    <value>Any dietary requirements?</value>
  </data>
  <data name="RsvpPage_Link" xml:space="preserve">
    <value>Rsvp</value>
  </data>
  <data name="RsvpPage_SubTitle" xml:space="preserve">
    <value>We can't wait to share our special day with you</value>
  </data>
  <data name="RsvpPage_Title" xml:space="preserve">
    <value>Come Celebrate</value>
  </data>
  <data name="RsvpResponse_No" xml:space="preserve">
    <value>Sorry can't make it :-(</value>
  </data>
  <data name="RsvpResponse_Yes" xml:space="preserve">
    <value>Yep, I'm coming, can't wait!</value>
  </data>
  <data name="Rsvp_PleaseAddStory" xml:space="preserve">
    <value>To help with speeches and maybe even to make pre-wedding high-tech nice guest book, please add an interesting fact or story below. It can be anything about any member of the wedding party, the funnier/ruder the better!</value>
  </data>
  <data name="Rsvp_PleaseRsvp" xml:space="preserve">
    <value>Please check details for all wedding guests in your party. If we've made any mistakes or missed anyone off then please add them.</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="TelephoneNumber" xml:space="preserve">
    <value>Telephone Number</value>
  </data>
  <data name="WeddingPartyMember_BestMan" xml:space="preserve">
    <value>Will</value>
  </data>
  <data name="WeddingPartyMember_Bride" xml:space="preserve">
    <value>Kathryn</value>
  </data>
  <data name="WeddingPartyMember_Bridesmaids" xml:space="preserve">
    <value>The Bridesmaids</value>
  </data>
  <data name="WeddingPartyMember_FatherOfTheBride" xml:space="preserve">
    <value>Paul</value>
  </data>
  <data name="WeddingPartyMember_FatherOfTheGroom" xml:space="preserve">
    <value>Ralph</value>
  </data>
  <data name="WeddingPartyMember_Groom" xml:space="preserve">
    <value>Alex</value>
  </data>
  <data name="WeddingPartyMember_MotherOfTheBride" xml:space="preserve">
    <value>Dawn</value>
  </data>
  <data name="WeddingPartyMember_MotherOfTheGroom" xml:space="preserve">
    <value>Sheila</value>
  </data>
</root>